{"pandoc-api-version":[1,22],"meta":{},"blocks":[{"t":"Header","c":[1,["welcome-to-mkdocs",[],[]],[{"t":"Str","c":"Welcome"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Str","c":"MkDocs"}]]},{"t":"Para","c":[{"t":"Str","c":"For"},{"t":"Space"},{"t":"Str","c":"full"},{"t":"Space"},{"t":"Str","c":"documentation"},{"t":"Space"},{"t":"Str","c":"visit"},{"t":"Space"},{"t":"Link","c":[["",[],[]],[{"t":"Str","c":"mkdocs.org"}],["https://www.mkdocs.org",""]]},{"t":"Str","c":"."}]},{"t":"Header","c":[2,["commands",[],[]],[{"t":"Str","c":"Commands"}]]},{"t":"Para","c":[{"t":"Str","c":"!!!"},{"t":"Space"},{"t":"Str","c":"note"}]},{"t":"CodeBlock","c":[["",[],[]],"* `mkdocs new [dir-name]` - Create a new project.\n* `mkdocs serve` - Start the live-reloading docs server.\n* `mkdocs build` - Build the documentation site.\n* `mkdocs -h` - Print help message and exit."]},{"t":"Header","c":[2,["project-layout",[],[]],[{"t":"Str","c":"Project"},{"t":"Space"},{"t":"Str","c":"layout"}]]},{"t":"CodeBlock","c":[["",[],[]],"mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files."]},{"t":"CodeBlock","c":[["",["python"],[]],"from rurple import *\n\ndef parcourir_ligne():\n    \"Parcourt une ligne\"\n    while not mur_devant():\n        avance()\n        \n#parcourir_ligne()\n        \ndef tour_grille(n):\n    \"Effectue n tours d'une grille rectangulaire\"\n    for i in range(n):\n        for j in range(4):\n            parcourir_ligne()\n            gauche()\n\ndef tour_grille2(n):\n    \"Effectue n tours d'une grille rectangulaire\"\n    for i in range(4 * n):\n        parcourir_ligne()\n        gauche()\n\n\n#tour_grille(6)\n\n\ndef mystere():\n    \"Ramasse toutes les billes sur une case\"\n    while bille_au_sol():\n        prends()\n    \n#mystere()\n\n\ndef aspirateur_ligne():\n    \"Ramasse toutes les billes sur une ligne\"\n    mystere()\n    while not mur_devant():\n        avance()\n        mystere()\n        \n    \n#aspirateur_ligne()\n\n\ndef droite():\n    \"Fait tourner le robot à droite\"\n    for k in range(3):\n        gauche()\n        \ndef quart_tour(ligne):\n    if ligne % 2 == 1:\n        gauche()\n    else:\n        droite()\n\ndef aspirateur_grille():\n    \"Ramasse toutes les billes sur une grille\"\n    ligne = 1\n    aspirateur_ligne()\n    quart_tour(ligne)\n    while not mur_devant():\n        avance()\n        quart_tour(ligne)\n        aspirateur_ligne()\n        ligne = ligne + 1\n        quart_tour(ligne)\n        \n\n#aspirateur_grille()\n\ndef demi_tour():\n    gauche()\n    gauche()\n    \ndef bille_devant():\n    \"Détermine si la case devant contient une bille\"\n    avance()\n    reponse = bille_au_sol()\n    demi_tour()\n    avance()\n    demi_tour()\n    return reponse\n    \n\ndef petit_poucet():\n    \"\"\"Le robot parcourt toutes les cases d'une grille carré nxn avec n impair\n    et dépose 1 billes sur chaque case \"\"\"\n    while bille_en_poche():\n        depose()\n        if mur_devant() or bille_devant():\n            gauche()\n        if not bille_devant():\n            avance()            \n\npetit_poucet()"]},{"t":"Header","c":[1,["mathématiques",[],[]],[{"t":"Str","c":"Mathématiques"}]]},{"t":"Para","c":[{"t":"Math","c":[{"t":"InlineMath"},"\\frac{a^{12}}{b}"]}]}]}